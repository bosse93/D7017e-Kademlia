// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	data.proto

It has these top-level messages:
	RequestContact
	RequestData
	RequestStore
	Reply
	ReplyContact
	ReplyData
	WrapperMessage
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RequestContact struct {
	Target string `protobuf:"bytes,1,opt,name=target" json:"target,omitempty"`
}

func (m *RequestContact) Reset()                    { *m = RequestContact{} }
func (m *RequestContact) String() string            { return proto.CompactTextString(m) }
func (*RequestContact) ProtoMessage()               {}
func (*RequestContact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *RequestContact) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

type RequestData struct {
	Key string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *RequestData) Reset()                    { *m = RequestData{} }
func (m *RequestData) String() string            { return proto.CompactTextString(m) }
func (*RequestData) ProtoMessage()               {}
func (*RequestData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *RequestData) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type RequestStore struct {
	Key  string `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
	Data string `protobuf:"bytes,2,opt,name=Data" json:"Data,omitempty"`
}

func (m *RequestStore) Reset()                    { *m = RequestStore{} }
func (m *RequestStore) String() string            { return proto.CompactTextString(m) }
func (*RequestStore) ProtoMessage()               {}
func (*RequestStore) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RequestStore) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *RequestStore) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type Reply struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *Reply) Reset()                    { *m = Reply{} }
func (m *Reply) String() string            { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()               {}
func (*Reply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Reply) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ReplyContact struct {
	Contacts []*ReplyContact_Contact `protobuf:"bytes,2,rep,name=Contacts" json:"Contacts,omitempty"`
}

func (m *ReplyContact) Reset()                    { *m = ReplyContact{} }
func (m *ReplyContact) String() string            { return proto.CompactTextString(m) }
func (*ReplyContact) ProtoMessage()               {}
func (*ReplyContact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReplyContact) GetContacts() []*ReplyContact_Contact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

type ReplyContact_Contact struct {
	ID       string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=Address" json:"Address,omitempty"`
	Distance string `protobuf:"bytes,3,opt,name=Distance" json:"Distance,omitempty"`
}

func (m *ReplyContact_Contact) Reset()                    { *m = ReplyContact_Contact{} }
func (m *ReplyContact_Contact) String() string            { return proto.CompactTextString(m) }
func (*ReplyContact_Contact) ProtoMessage()               {}
func (*ReplyContact_Contact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

func (m *ReplyContact_Contact) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ReplyContact_Contact) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ReplyContact_Contact) GetDistance() string {
	if m != nil {
		return m.Distance
	}
	return ""
}

type ReplyData struct {
	Data string `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (m *ReplyData) Reset()                    { *m = ReplyData{} }
func (m *ReplyData) String() string            { return proto.CompactTextString(m) }
func (*ReplyData) ProtoMessage()               {}
func (*ReplyData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReplyData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type WrapperMessage struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	SourceID  string `protobuf:"bytes,2,opt,name=sourceID" json:"sourceID,omitempty"`
	RequestID string `protobuf:"bytes,3,opt,name=requestID" json:"requestID,omitempty"`
	// Types that are valid to be assigned to Msg:
	//	*WrapperMessage_RequestContact
	//	*WrapperMessage_RequestData
	//	*WrapperMessage_Reply
	//	*WrapperMessage_ReplyContact
	//	*WrapperMessage_ReplyData
	Msg isWrapperMessage_Msg `protobuf_oneof:"msg"`
}

func (m *WrapperMessage) Reset()                    { *m = WrapperMessage{} }
func (m *WrapperMessage) String() string            { return proto.CompactTextString(m) }
func (*WrapperMessage) ProtoMessage()               {}
func (*WrapperMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type isWrapperMessage_Msg interface {
	isWrapperMessage_Msg()
}

type WrapperMessage_RequestContact struct {
	RequestContact *RequestContact `protobuf:"bytes,4,opt,name=requestContact,oneof"`
}
type WrapperMessage_RequestData struct {
	RequestData *RequestData `protobuf:"bytes,5,opt,name=requestData,oneof"`
}
type WrapperMessage_Reply struct {
	Reply *Reply `protobuf:"bytes,6,opt,name=reply,oneof"`
}
type WrapperMessage_ReplyContact struct {
	ReplyContact *ReplyContact `protobuf:"bytes,7,opt,name=replyContact,oneof"`
}
type WrapperMessage_ReplyData struct {
	ReplyData *ReplyData `protobuf:"bytes,8,opt,name=replyData,oneof"`
}

func (*WrapperMessage_RequestContact) isWrapperMessage_Msg() {}
func (*WrapperMessage_RequestData) isWrapperMessage_Msg()    {}
func (*WrapperMessage_Reply) isWrapperMessage_Msg()          {}
func (*WrapperMessage_ReplyContact) isWrapperMessage_Msg()   {}
func (*WrapperMessage_ReplyData) isWrapperMessage_Msg()      {}

func (m *WrapperMessage) GetMsg() isWrapperMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *WrapperMessage) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *WrapperMessage) GetSourceID() string {
	if m != nil {
		return m.SourceID
	}
	return ""
}

func (m *WrapperMessage) GetRequestID() string {
	if m != nil {
		return m.RequestID
	}
	return ""
}

func (m *WrapperMessage) GetRequestContact() *RequestContact {
	if x, ok := m.GetMsg().(*WrapperMessage_RequestContact); ok {
		return x.RequestContact
	}
	return nil
}

func (m *WrapperMessage) GetRequestData() *RequestData {
	if x, ok := m.GetMsg().(*WrapperMessage_RequestData); ok {
		return x.RequestData
	}
	return nil
}

func (m *WrapperMessage) GetReply() *Reply {
	if x, ok := m.GetMsg().(*WrapperMessage_Reply); ok {
		return x.Reply
	}
	return nil
}

func (m *WrapperMessage) GetReplyContact() *ReplyContact {
	if x, ok := m.GetMsg().(*WrapperMessage_ReplyContact); ok {
		return x.ReplyContact
	}
	return nil
}

func (m *WrapperMessage) GetReplyData() *ReplyData {
	if x, ok := m.GetMsg().(*WrapperMessage_ReplyData); ok {
		return x.ReplyData
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*WrapperMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _WrapperMessage_OneofMarshaler, _WrapperMessage_OneofUnmarshaler, _WrapperMessage_OneofSizer, []interface{}{
		(*WrapperMessage_RequestContact)(nil),
		(*WrapperMessage_RequestData)(nil),
		(*WrapperMessage_Reply)(nil),
		(*WrapperMessage_ReplyContact)(nil),
		(*WrapperMessage_ReplyData)(nil),
	}
}

func _WrapperMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*WrapperMessage)
	// msg
	switch x := m.Msg.(type) {
	case *WrapperMessage_RequestContact:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RequestContact); err != nil {
			return err
		}
	case *WrapperMessage_RequestData:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.RequestData); err != nil {
			return err
		}
	case *WrapperMessage_Reply:
		b.EncodeVarint(6<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Reply); err != nil {
			return err
		}
	case *WrapperMessage_ReplyContact:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplyContact); err != nil {
			return err
		}
	case *WrapperMessage_ReplyData:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ReplyData); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("WrapperMessage.Msg has unexpected type %T", x)
	}
	return nil
}

func _WrapperMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*WrapperMessage)
	switch tag {
	case 4: // msg.requestContact
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestContact)
		err := b.DecodeMessage(msg)
		m.Msg = &WrapperMessage_RequestContact{msg}
		return true, err
	case 5: // msg.requestData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestData)
		err := b.DecodeMessage(msg)
		m.Msg = &WrapperMessage_RequestData{msg}
		return true, err
	case 6: // msg.reply
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reply)
		err := b.DecodeMessage(msg)
		m.Msg = &WrapperMessage_Reply{msg}
		return true, err
	case 7: // msg.replyContact
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyContact)
		err := b.DecodeMessage(msg)
		m.Msg = &WrapperMessage_ReplyContact{msg}
		return true, err
	case 8: // msg.replyData
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyData)
		err := b.DecodeMessage(msg)
		m.Msg = &WrapperMessage_ReplyData{msg}
		return true, err
	default:
		return false, nil
	}
}

func _WrapperMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*WrapperMessage)
	// msg
	switch x := m.Msg.(type) {
	case *WrapperMessage_RequestContact:
		s := proto.Size(x.RequestContact)
		n += proto.SizeVarint(4<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WrapperMessage_RequestData:
		s := proto.Size(x.RequestData)
		n += proto.SizeVarint(5<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WrapperMessage_Reply:
		s := proto.Size(x.Reply)
		n += proto.SizeVarint(6<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WrapperMessage_ReplyContact:
		s := proto.Size(x.ReplyContact)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *WrapperMessage_ReplyData:
		s := proto.Size(x.ReplyData)
		n += proto.SizeVarint(8<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*RequestContact)(nil), "main.RequestContact")
	proto.RegisterType((*RequestData)(nil), "main.RequestData")
	proto.RegisterType((*RequestStore)(nil), "main.RequestStore")
	proto.RegisterType((*Reply)(nil), "main.Reply")
	proto.RegisterType((*ReplyContact)(nil), "main.ReplyContact")
	proto.RegisterType((*ReplyContact_Contact)(nil), "main.ReplyContact.Contact")
	proto.RegisterType((*ReplyData)(nil), "main.ReplyData")
	proto.RegisterType((*WrapperMessage)(nil), "main.WrapperMessage")
}

func init() { proto.RegisterFile("data.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xcb, 0x4e, 0xeb, 0x30,
	0x10, 0x86, 0x73, 0x69, 0x7a, 0x99, 0x54, 0x39, 0x07, 0x0b, 0x21, 0xab, 0x20, 0xb5, 0x0a, 0x9b,
	0xac, 0x82, 0x54, 0x2e, 0x62, 0x85, 0x04, 0x64, 0x91, 0x08, 0x21, 0x24, 0xb3, 0x60, 0x6d, 0x1a,
	0xab, 0x8a, 0xd4, 0x36, 0xc1, 0x76, 0x17, 0x7d, 0x12, 0x5e, 0x91, 0xc7, 0x40, 0x76, 0x9d, 0xd6,
	0xa5, 0xab, 0xcc, 0x78, 0xbe, 0xdf, 0xf3, 0x7b, 0x26, 0x00, 0x25, 0x95, 0x34, 0x6d, 0x78, 0x2d,
	0x6b, 0xd4, 0x59, 0xd2, 0x6a, 0x15, 0x27, 0x10, 0x11, 0xf6, 0xb5, 0x66, 0x42, 0x3e, 0xd7, 0x2b,
	0x49, 0x67, 0x12, 0x9d, 0x41, 0x57, 0x52, 0x3e, 0x67, 0x12, 0xbb, 0x13, 0x37, 0x19, 0x10, 0x93,
	0xc5, 0x63, 0x08, 0x0d, 0x99, 0x51, 0x49, 0xd1, 0x7f, 0xf0, 0x5f, 0xd8, 0xc6, 0x30, 0x2a, 0x8c,
	0x6f, 0x60, 0x68, 0x80, 0x77, 0x59, 0x73, 0x76, 0x4c, 0x20, 0x04, 0x1d, 0xa5, 0xc5, 0x9e, 0x3e,
	0xd2, 0x71, 0x7c, 0x0e, 0x01, 0x61, 0xcd, 0x42, 0x17, 0x95, 0x3b, 0xc3, 0xeb, 0x38, 0xfe, 0x76,
	0xd5, 0x9d, 0xcd, 0x62, 0xd3, 0x9a, 0xbb, 0x83, 0xbe, 0x09, 0x05, 0xf6, 0x26, 0x7e, 0x12, 0x4e,
	0x47, 0xa9, 0x7a, 0x47, 0x6a, 0x53, 0xa9, 0xf9, 0x92, 0x1d, 0x3b, 0x7a, 0x83, 0x5e, 0x7b, 0x45,
	0x04, 0x5e, 0x91, 0x99, 0x2e, 0x5e, 0x91, 0x21, 0x0c, 0xbd, 0xc7, 0xb2, 0xe4, 0x4c, 0x08, 0xe3,
	0xab, 0x4d, 0xd1, 0x08, 0xfa, 0x59, 0x25, 0x24, 0x5d, 0xcd, 0x18, 0xf6, 0x75, 0x69, 0x97, 0xc7,
	0x63, 0x18, 0xe8, 0x96, 0x7a, 0x16, 0xad, 0x75, 0xcf, 0xb2, 0xfe, 0xe3, 0x41, 0xf4, 0xc1, 0x69,
	0xd3, 0x30, 0xfe, 0xca, 0x84, 0xa0, 0x73, 0xa6, 0x3a, 0x57, 0x65, 0xdb, 0xb9, 0x2a, 0xd5, 0xfd,
	0xa2, 0x5e, 0xf3, 0x19, 0x2b, 0x32, 0x23, 0xdd, 0xe5, 0xe8, 0x02, 0x06, 0x7c, 0x3b, 0xcc, 0x22,
	0x33, 0xcd, 0xf7, 0x07, 0xe8, 0x01, 0x22, 0x7e, 0xb0, 0x35, 0xdc, 0x99, 0xb8, 0x49, 0x38, 0x3d,
	0x6d, 0x87, 0x61, 0xd7, 0x72, 0x87, 0xfc, 0xa1, 0xd1, 0x2d, 0x84, 0x7c, 0xbf, 0x4b, 0x1c, 0x68,
	0xf1, 0xc9, 0x81, 0x58, 0x15, 0x72, 0x87, 0xd8, 0x1c, 0xba, 0x84, 0x80, 0xab, 0x47, 0xe3, 0xae,
	0x16, 0x84, 0xd6, 0xe8, 0x73, 0x87, 0x6c, 0x6b, 0xe8, 0x1e, 0x86, 0xdc, 0x5a, 0x06, 0xee, 0x69,
	0x16, 0x1d, 0xaf, 0x29, 0x77, 0xc8, 0x01, 0x89, 0xae, 0xd4, 0x9b, 0xcd, 0x4c, 0x71, 0x5f, 0xcb,
	0xfe, 0x59, 0x32, 0xe3, 0x68, 0xcf, 0x3c, 0x05, 0xe0, 0x2f, 0xc5, 0xfc, 0xb3, 0xab, 0x7f, 0xe8,
	0xeb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd9, 0xea, 0x4b, 0xa5, 0xde, 0x02, 0x00, 0x00,
}
